// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Analytics = require("./analytics.bs.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Text$BsReactNative = require("bs-react-native/src/components/text.js");
var View$BsReactNative = require("bs-react-native/src/components/view.js");
var Button$BsReactNative = require("bs-react-native/src/components/button.js");

var component = ReasonReact.reducerComponent("Cover");

function make() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (param) {
      var send = param[/* send */4];
      return ReasonReact.element(/* None */0, /* None */0, View$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[
                      ReasonReact.element(/* None */0, /* None */0, Text$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["Avo Reason React Native Counter Example"])),
                      ReasonReact.element(/* None */0, /* None */0, View$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[
                                ReasonReact.element(/* None */0, /* None */0, Button$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* Some */[(function () {
                                                return Curry._1(send, /* Decrement */1);
                                              })], /* None */0, /* Some */["-"])(/* array */[])),
                                ReasonReact.element(/* None */0, /* None */0, Text$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[Pervasives.string_of_int(param[/* state */2][/* counter */0])])),
                                ReasonReact.element(/* None */0, /* None */0, Button$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* Some */[(function () {
                                                return Curry._1(send, /* Increment */0);
                                              })], /* None */0, /* Some */["+"])(/* array */[]))
                              ]))
                    ]));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* counter */0];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      if (action !== 0) {
        return /* UpdateWithSideEffects */Block.__(3, [
                  /* record */[/* counter */state[/* counter */0] - 1 | 0],
                  (function () {
                      Analytics.counterDecrement(state[/* counter */0], state[/* counter */0] + 1 | 0);
                      return /* () */0;
                    })
                ]);
      } else {
        return /* UpdateWithSideEffects */Block.__(3, [
                  /* record */[/* counter */state[/* counter */0] + 1 | 0],
                  (function () {
                      Analytics.counterIncrement(state[/* counter */0], state[/* counter */0] + 1 | 0);
                      return /* () */0;
                    })
                ]);
      }
    });
  return newrecord;
}

var $$default = ReasonReact.wrapReasonForJs(component, (function () {
        return make(/* array */[]);
      }));

exports.component = component;
exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* component Not a pure module */
