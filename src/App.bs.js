// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var AnalyticsRe = require("./analyticsRe.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Text$BsReactNative = require("bs-react-native/src/components/text.js");
var View$BsReactNative = require("bs-react-native/src/components/view.js");
var Button$BsReactNative = require("bs-react-native/src/components/button.js");

var component = ReasonReact.reducerComponent("Cover");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              return ReasonReact.element(/* None */0, /* None */0, View$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[
                              ReasonReact.element(/* None */0, /* None */0, Text$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["Avo Reason React Native Counter Example"])),
                              ReasonReact.element(/* None */0, /* None */0, View$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[
                                        ReasonReact.element(/* None */0, /* None */0, Button$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* Some */[(function () {
                                                        return Curry._1(send, /* Decrement */1);
                                                      })], /* None */0, /* Some */["-"])(/* array */[])),
                                        ReasonReact.element(/* None */0, /* None */0, Text$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[String(param[/* state */1][/* counter */0])])),
                                        ReasonReact.element(/* None */0, /* None */0, Button$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* Some */[(function () {
                                                        return Curry._1(send, /* Increment */0);
                                                      })], /* None */0, /* Some */["+"])(/* array */[]))
                                      ])),
                              ReasonReact.element(/* None */0, /* None */0, View$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[
                                        ReasonReact.element(/* None */0, /* None */0, Button$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* Some */[(function () {
                                                        return AnalyticsRe.setup_({
                                                                    useProductionKey: false,
                                                                    validateProperties: true
                                                                  }, /* () */0);
                                                      })], /* None */0, /* Some */["Dev Mode"])(/* array */[])),
                                        ReasonReact.element(/* None */0, /* None */0, Button$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* Some */[(function () {
                                                        return AnalyticsRe.setup_({
                                                                    useProductionKey: true,
                                                                    validateProperties: false
                                                                  }, /* () */0);
                                                      })], /* None */0, /* Some */["Prod Mode"])(/* array */[]))
                                      ]))
                            ]));
            }),
          /* initialState */(function () {
              return /* record */[/* counter */0];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* UpdateWithSideEffects */Block.__(2, [
                          /* record */[/* counter */state[/* counter */0] - 1 | 0],
                          (function () {
                              AnalyticsRe.counterDecrement(state[/* counter */0], state[/* counter */0] + 1 | 0);
                              return /* () */0;
                            })
                        ]);
              } else {
                return /* UpdateWithSideEffects */Block.__(2, [
                          /* record */[/* counter */state[/* counter */0] + 1 | 0],
                          (function () {
                              AnalyticsRe.counterIncrement(state[/* counter */0], state[/* counter */0] + 1 | 0);
                              return /* () */0;
                            })
                        ]);
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var $$default = ReasonReact.wrapReasonForJs(component, (function () {
        return make(/* array */[]);
      }));

exports.component = component;
exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* component Not a pure module */
